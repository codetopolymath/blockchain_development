SYMMETRIC AND ASSYMETRIC CRYPTOGRAPHY:
way to generate keys is illustrated in public_vs_private_key.py file, please find instuction there.
SYMMETRIC VS ASYMMETRIC CRYPTOGRAPHY:
    [*] symmetric cryptography uses same key in between sender and receiver. key is used to encrypt and decrypt message.
    [*] assymetric cryptography used two types of keys, public and private. linked with special mathematical relation. 
        eg:
            message ---> encrypted with public key ---> decrypt only with private key
            message ---> encrypted with private key ---> decrypt only with public key
        so with assymetric cryptography people can communication secreatly without exchanging key first.

so generally in cryptocurrency world, 
    generating private key is equivalent to account creation.
    address or username is derived from public key which is being gererated from private key.

HASHING:
function that take any length of input and gives fixed number of output.
    IMP: the output of hashing function can be used as digital signature.
    MINER: miner perform a extra action of finding string that will find solution [eg: putting 5 zero's in signature{calculated with hashing funcation in accordance} beginning]. this is to be done in loop with hashing function as signature is generated using it.

PROOF OF WORK:
    hashing make tampering hard but it is feasible.
    so if we distributed append-only database to miners and some minor decided to change it other miner will eject him as data does not matches.
    
CONSENSUS:
    for adding a new block into blockchain we broadcast it into miners network, in collection of block based on miners location[as all block can 
    not be present to all miner at one time] miner will choose longest chain[block with more transcations] 
